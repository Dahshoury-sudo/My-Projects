import random
import sys
from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button

class GuessingGame(BoxLayout):
    def __init__(self, **kwargs):
        super().__init__(orientation='vertical', **kwargs)
        self.secret = random.randint(1, 10)  # Random secret number
        self.tries = 0  # Counter for tries
        
        # Title
        self.label_title = Label(text="üéØ Guessing Game üéØ", font_size=24, bold=True)
        self.add_widget(self.label_title)

        # Instruction Label
        self.label_instruction = Label(text="Guess a number between 1 and 10", font_size=18)
        self.add_widget(self.label_instruction)

        # Input Field
        self.text_input = TextInput(hint_text="Enter your guess", font_size=18, multiline=False)
        self.add_widget(self.text_input)

        # Submit Button
        self.button_submit = Button(text="Submit Guess", font_size=18, on_press=self.check_guess)
        self.add_widget(self.button_submit)

        # Feedback Label
        self.label_feedback = Label(text="", font_size=16)
        self.add_widget(self.label_feedback)

    def check_guess(self, instance):
        """Check user's guess and provide feedback."""
        guess_text = self.text_input.text.strip()

        # Validate input
        if not guess_text.isdigit():
            self.label_feedback.text = "‚ö†Ô∏è Please enter a valid number!"
            return

        guess = int(guess_text)

        if guess < 1 or guess > 10:
            self.label_feedback.text = "‚ö†Ô∏è Enter a number between 1 and 10!"
            return

        self.tries += 1

        # Check if correct
        if guess == self.secret:
            self.label_feedback.text = "üéâ Congrats! You won! üéâ"
            self.end_game()
        else:
            self.label_feedback.text = f"‚ùå Wrong Guess! {3 - self.tries} tries left."

            # Provide hints
            if self.tries == 1:
                hint = "Even" if self.secret % 2 == 0 else "Odd"
                self.label_feedback.text += f"\nHint: The number is {hint} ‚ùóÔ∏è"
            elif self.tries == 2:
                hint = "5 or more" if self.secret >= 5 else "4 or less"
                self.label_feedback.text += f"\nHint: The number is {hint} ‚ùóÔ∏è"

        # Check if out of tries
        if self.tries == 3:
            self.label_feedback.text = f"üíÄ Game Over! The number was {self.secret}."
            self.end_game()

    def end_game(self):
        """Disable input and show restart button."""
        self.text_input.disabled = True
        self.button_submit.disabled = True

        # Restart button
        self.button_restart = Button(text="Play Again", font_size=18, on_press=self.restart_game)
        self.add_widget(self.button_restart)

    def restart_game(self, instance):
        """Restart the game with a new number."""
        self.secret = random.randint(1, 10)
        self.tries = 0
        self.label_feedback.text = ""
        self.text_input.text = ""
        self.text_input.disabled = False
        self.button_submit.disabled = False
        self.remove_widget(self.button_restart)  # Remove restart button

class GuessingGameApp(App):
    def build(self):
        return GuessingGame()

# Run the app
if __name__ == "__main__":
    GuessingGameApp().run()
